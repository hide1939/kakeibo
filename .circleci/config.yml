version: 2.1
jobs:
  build-test:
    docker:
      - image: circleci/php:7.3
        environment:
          - APP_ENV: testing
          - APP_KEY: base64:9tvXas6NOO2xwDWWvH9QuUjF5B/3asfbxx/Ejl8bQCo=
          - DB_CONNECTION: mysql
          - DB_HOST: 127.0.0.1
          - DB_PORT: 3306
          - DB_DATABASE: test-database
          - DB_USERNAME: test-user
          - DB_PASSWORD: test-password
      - image: circleci/mysql:5.7-ram
        environment:
          - MYSQL_DATABASE: test-database
          - MYSQL_USER: test-user
          - MYSQL_PASSWORD: test-password
    working_directory: ~/myProject
    steps:
      - checkout
      # cache composer to speed up "composer install" at the second time and after
      - restore_cache:
          # search composer.lock cache 
          # if composer.lock was changed, this key will be fail
          keys:
          - composer-v1-{{ checksum "./kakeibo/composer.lock" }}
          # search new cache
          - composer-v1-
      - run: 
          name: execute "composer install" to make vendor/
          working_directory: kakeibo
          command: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "./kakeibo/composer.lock" }}
          paths:
            - kakeibo/vendor
      - run:
          name: install php extension to execute phpunit test
          command: |
            sudo apt-get update
            sudo apt-get install -y libfreetype6-dev libjpeg-dev libpng-dev
            sudo docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
            sudo docker-php-ext-install gd pdo_mysql
      - run:
          name: migrate database for phpunit test
          working_directory: kakeibo
          command: php artisan migrate --env=testing
      - run:
          name: execute phpunit test
          working_directory: kakeibo
          command: |
            vendor/bin/phpunit
      - persist_to_workspace:
          root: .
          paths: 
            - deploy
            - kakeibo
  deploy-to-gke:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: myProject
      - run:
          name: check
          working_directory: myProject
          command: |
            pwd
            ls
            ls -a
workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build-test
      - deploy-to-gke:
          requires:
            - build-test